<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:task="http://www.springframework.org/schema/task" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
          http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-4.0.xsd  
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
           http://www.springframework.org/schema/aop   
           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
           http://www.springframework.org/schema/task 
           http://www.springframework.org/schema/task/spring-task-4.0.xsd 
           http://www.springframework.org/schema/mvc 
		   http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"
           >

	<!-- 属性配置信息  -->
	<import resource="conf_main/main_ctx.xml" />
	<import resource="conf_service/service_ctx.xml" />
	<import resource="classpath*:hologramKey.xml" />
	<import resource="classpath*:mongo/spring-mongodb.xml" />
	<!-- <import resource="classpath*:mongodb/galaxy-mongo-config.xml" /> -->
	<import resource="classpath*:dubbo/sop-dubbo-provider.xml" />
	<import resource="classpath*:galaxy-dubbo-consumer.xml" />
	<import resource="classpath*:applicationContext-cache.xml" />
	<!-- <import resource="classpath*:redis/galaxy-redis-config.xml" /> -->
	<!-- <import resource="classpath*:redis/userRepository-context.xml" /> -->
	<import resource="classpath*:spring-session.xml" />


	<context:property-placeholder ignore-unresolvable="true" location="classpath:springValue.properties" />
	<!--<bean id="springValue"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
				<value>classpath:springValue.properties</value>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>-->

	<!-- 用于初始化不同项目的请求地址，存入redis中 -->
	<bean id="com.galaxyinternet.framework.core.config.ConfigBean" class="com.galaxyinternet.framework.core.config.ConfigBean">
		<constructor-arg index="0" value="endpoint.properties" />
		<constructor-arg index="1">
			<list>
				<value>galaxy.project.platform.endpoint</value>
				<value>galaxy.project.report.endpoint</value>
				<value>galaxy.project.sop.endpoint</value>
			</list>
		</constructor-arg>
		<constructor-arg index="2" ref="cache" />
	</bean>
	
		
	<bean id="com.galaxyinternet.common.utils.SpringContextManager" 
		class="com.galaxyinternet.common.utils.SpringContextManager"
		scope="singleton"/>
	
	
	<bean  class="com.galaxyinternet.framework.core.utils.BuryRequest" 
	p:burySaveUrl="${galaxy.project.bury.endpoint}"
	p:burySoftWareVersion="${buryPoint.softWare.vesion}">
	    
	</bean>
	<bean  class="com.galaxyinternet.framework.core.utils.AuthRequestUtil" 
	p:authSaveUrl="${auth.uri}">
	    
	</bean>
	
	<bean id="testTask" class="com.galaxyinternet.scheduling.TestTask" p:disabled="false"/>
	<bean id="leaderSelector" class="com.galaxyinternet.framework.core.cluster.LeaderSelector">
		<constructor-arg name="address" value="${cluster.zk.address}"/>
		<constructor-arg name="product" value="sop"/>
	</bean>
	<bean id="galaxyTaskScheduler" class="com.galaxyinternet.scheduling.GalaxyTaskScheduler"/>
	<task:scheduled-tasks scheduler="galaxyTaskScheduler">
		<!-- 
		<task:scheduled ref="testTask" method="execute" cron="*/5 * * * * MON-FRI"/>
		<task:scheduled ref="testAnnotaionTask" method="execute" cron="*/5 * * * * MON-FRI"/>
		 -->
		<task:scheduled ref="meetingPassStageTask" method="execute" cron="0 0 1,4,7 1 * ?"/>
		<!-- 每天凌晨2点开始拉取更新会议排期缓存数据 -->
		<task:scheduled ref="pullMessageTask" method="execute" cron="0 0 2 * * ?"/>
		<!-- 每30秒钟就行IOS消息数据 -->
		<task:scheduled ref="pushMessageTask" method="execute" cron="*/30 * * * * ?"/>
		<!-- 每月1号为有实际注资信息的项目发添加运营数据的消息 -->
		<task:scheduled ref="pushMessageOperation" method="execute" cron="0 0 0 1 * ?"/>
		<task:scheduled ref="dictCacheUtils" method="execute" cron="0 0 2 * * ?"/>
		<!-- 每4小时，重新设置缓存的值
		<task:scheduled ref="utilsService" method="execute" cron="0 0 0/4 * * ? "/>
		 -->
	</task:scheduled-tasks>




	<bean id="pollingConnectionManager" class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager">
		<!--整个连接池的并发-->
		<property name="maxTotal" value="500" />
		<!--每个主机的并发-->
		<property name="defaultMaxPerRoute" value="500" />
	</bean>

	<bean id="httpClientBuilder" class="org.apache.http.impl.client.HttpClientBuilder" factory-method="create">
		<property name="connectionManager" ref="pollingConnectionManager" />
		<!--开启重试-->
		<property name="retryHandler">
			<bean class="org.apache.http.impl.client.DefaultHttpRequestRetryHandler">
				<constructor-arg value="2"/>
				<constructor-arg value="true"/>
			</bean>
		</property>
		<property name="defaultHeaders">
			<list>
				<bean class="org.apache.http.message.BasicHeader">
					<constructor-arg value="User-Agent"/>
					<constructor-arg value="Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.16 Safari/537.36"/>
				</bean>
				<bean class="org.apache.http.message.BasicHeader">
					<constructor-arg value="Accept-Encoding"/>
					<constructor-arg value="gzip,deflate"/>
				</bean>
				<bean class="org.apache.http.message.BasicHeader">
					<constructor-arg value="Accept-Language"/>
					<constructor-arg value="zh-CN"/>
				</bean>
			</list>
		</property>
	</bean>

	<bean id="httpClient" factory-bean="httpClientBuilder" factory-method="build" />

	<bean id="clientHttpRequestFactory" class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
		<constructor-arg ref="httpClient"/>
		<!--连接超时时间，毫秒-->
		<property name="connectTimeout" value="5000"/>
		<!--读写超时时间，毫秒-->
		<property name="readTimeout" value="10000"/>
	</bean>

	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<constructor-arg ref="clientHttpRequestFactory"/>
		<property name="errorHandler">
			<bean class="org.springframework.web.client.DefaultResponseErrorHandler"/>
		</property>
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>


</beans>
