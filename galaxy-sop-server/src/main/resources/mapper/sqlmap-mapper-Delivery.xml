<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.galaxyinternet.model.touhou.Delivery">

  <resultMap id="BaseResultMap" type="com.galaxyinternet.model.touhou.Delivery">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="describe" jdbcType="VARCHAR" property="describe" />
    <result column="details" jdbcType="VARCHAR" property="details" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="file_num" jdbcType="TINYINT" property="fileNum" />
    <result column="created_uid" jdbcType="BIGINT" property="createdUid" />
    <result column="created_time" jdbcType="BIGINT" property="createdTime" />
    <result column="updated_uid" jdbcType="BIGINT" property="updatedUid" />
    <result column="updated_time" jdbcType="BIGINT" property="updatedTime" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, project_id, 'describe', details, 'status', file_num, created_uid, created_time, updated_uid, 
    updated_time
  </sql>
  
	 <sql id="Base_Where_Clause">
		<where>
			<trim prefixOverrides="and">
			      <if test="id != null"> and id = #{id,jdbcType=BIGINT} </if>
				  <if test="projectId != null"> and project_id = #{projectId,jdbcType=BIGINT} </if>
			      <if test="describe != null"> and 'describe' = #{describe,jdbcType=VARCHAR} </if>
			      <if test="details != null"> and details = #{details,jdbcType=VARCHAR} </if>
			      <if test="status != null"> and 'status' = #{status,jdbcType=TINYINT} </if>
			      <if test="fileNum != null"> and file_num = #{fileNum,jdbcType=TINYINT} </if>
			      <if test="createdUid != null"> and created_uid = #{createdUid,jdbcType=BIGINT} </if>
			      <if test="createdTime != null"> and created_time = #{createdTime,jdbcType=BIGINT} </if>
			      <if test="updatedUid != null"> and updated_uid = #{updatedUid,jdbcType=BIGINT} </if>
			      <if test="updatedTime != null"> and updated_time = #{updatedTime,jdbcType=BIGINT} </if>
			</trim>
		</where>
		<if test="sorting != null">order by ${sorting}</if>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</sql>
	

	<!-- 根据ID查询-->
	<select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sop_delivery
		where id = #{id,jdbcType=BIGINT}
	</select>
	
	<!-- 查询 -->
	<select id="select" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from sop_delivery 
		<include refid="Base_Where_Clause" />
	</select>
	
	<!-- 查询总数 -->
	<select id="selectCount" resultType="java.lang.Long" parameterType="java.util.Map">
		select count(id) from sop_delivery
		<include refid="Base_Where_Clause" />
	</select>
	
	<!-- 删除 -->
	<delete id="delete" parameterType="java.util.Map">
		delete from sop_delivery
		<include refid="Base_Where_Clause" />
	</delete>
	
	<!-- 根据ID删除 -->
	<delete id="deleteById" parameterType="java.lang.Long">
		delete from sop_delivery
		where id = #{id,jdbcType=BIGINT}
	</delete>
	
 	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.galaxyinternet.model.touhou.Delivery">
 		 <![CDATA[
	 		insert into sop_delivery (id, project_id, 'describe', 
		      details, 'status', file_num, 
		      created_uid, created_time, updated_uid, 
		      updated_time)
		    values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{describe,jdbcType=VARCHAR}, 
		      #{details,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{fileNum,jdbcType=TINYINT}, 
		      #{createdUid,jdbcType=BIGINT}, #{createdTime,jdbcType=BIGINT}, #{updatedUid,jdbcType=BIGINT}, 
		      #{updatedTime,jdbcType=BIGINT})
 		 ]]>
 	</insert>
	
	
	<update id="updateById" parameterType="com.galaxyinternet.model.touhou.Delivery">
		update sop_delivery
		<set>
	      <if test="describe != null">  'describe' = #{describe,jdbcType=VARCHAR}, </if>
	      <if test="details != null">  details = #{details,jdbcType=VARCHAR}, </if>
	      <if test="status != null">  'status' = #{status,jdbcType=TINYINT}, </if>
	      <if test="fileNum != null">  file_num = #{fileNum,jdbcType=TINYINT}, </if>
	      <if test="updatedUid != null">  updated_uid = #{updatedUid,jdbcType=BIGINT}, </if>
	      <if test="updatedTime != null">  updated_time = #{updatedTime,jdbcType=BIGINT}, </if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	
  
</mapper>