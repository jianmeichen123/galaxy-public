<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.galaxyinternet.model.sopfile.SopFile">
	<resultMap id="BaseResultMap" type="SopFilePO">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="project_id" jdbcType="BIGINT" property="projectId" />
		<result column="belong_uid" jdbcType="BIGINT" property="belongUid" />
		<result column="file_valid" jdbcType="INTEGER" property="fileValid" />
		<result column="project_progress" jdbcType="VARCHAR" property="projectProgress" />
		<result column="file_worktype" jdbcType="VARCHAR" property="fileWorktype" />
		<result column="career_line" jdbcType="BIGINT" property="careerLine" />
		<result column="file_source" jdbcType="VARCHAR" property="fileSource" />
		<result column="file_type" jdbcType="VARCHAR" property="fileType" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="voucher_id" jdbcType="BIGINT" property="voucherId" />
		<result column="file_status" jdbcType="VARCHAR" property="fileStatus" />
		<result column="file_uid" jdbcType="BIGINT" property="fileUid" />
		<result column="fil_uri" jdbcType="VARCHAR" property="filUri" />
		<result column="updated_time" jdbcType="BIGINT" property="updatedTime" />
		<result column="created_time" jdbcType="BIGINT" property="createdTime" />
		<result column="file_length" jdbcType="BIGINT" property="fileLength" />
		<result column="file_key" jdbcType="VARCHAR" property="fileKey" />
		<result column="bucket_name" jdbcType="VARCHAR" property="bucketName" />
		<result column="file_name" jdbcType="VARCHAR" property="fileName" />
		<result column="file_suffix" jdbcType="VARCHAR" property="fileSuffix" />
		<result column="record_type" jdbcType="TINYINT" property="recordType" />
	</resultMap>
	
	<sql id="Base_Column_List">
		id, project_id, belong_uid, file_valid, project_progress, file_worktype, career_line,
		file_source, file_type,
		remark, voucher_id,  file_status, file_uid, fil_uri, updated_time, created_time,
		file_length,
		file_key, bucket_name,file_name,file_suffix,record_type
	</sql>
	
	
	<sql id="Base_Where_Clause">
		<where>
			<trim prefixOverrides="and">
				<if test="id != null"> and id =#{id,jdbcType=BIGINT}</if>
				<if test="projectId != null" >and project_id = #{projectId,jdbcType=BIGINT} </if>
				<if test="belongUid != null" >and belong_uid = #{belongUid,jdbcType=BIGINT} </if>
				<if test="fileValid != null" >and file_valid = #{fileValid,jdbcType=INTEGER} </if>
				<if test="projectProgress != null" >and project_progress = #{projectProgress,jdbcType=VARCHAR} </if>				
				<choose>
					<when test="fileWorktype != null" >
						and file_worktype = #{fileWorktype,jdbcType=VARCHAR}
					</when>
					<otherwise>
						<if test="fileWorktypeNullFilter != null" >
							and file_worktype is not null and file_worktype != 'fileWorktype:12'
						</if>
					</otherwise>
				</choose>  				
				<if test="careerLine != null" > and career_line = #{careerLine,jdbcType=VARCHAR} </if>
				<if test="fileSource != null" > and file_source = #{fileSource,jdbcType=VARCHAR} </if>
				<if test="fileType != null" > and file_type = #{fileType,jdbcType=VARCHAR} </if>
				<if test="remark != null" > and remark = #{remark,jdbcType=VARCHAR} </if>
				<if test="voucherId != null" > and voucher_id = #{voucherId,jdbcType=BIGINT} </if>
				<if test="fileStatus != null" > and file_status = #{fileStatus,jdbcType=VARCHAR} </if>
				<if test="fileUid != null" > and file_uid = #{fileUid,jdbcType=BIGINT} </if>
				<if test="filUri != null" > and fil_uri = #{filUri,jdbcType=BIGINT} </if>
				<if test="updatedTime != null" > and updated_time = #{updatedTime,jdbcType=BIGINT} </if>
				<if test="startTime!=null"><![CDATA[  and updated_time >= #{startTime,jdbcType=BIGINT} ]]></if>
				<if test="endTime!=null"><![CDATA[  and updated_time <= #{endTime,jdbcType=BIGINT} ]]></if>
				<if test="createdTime != null" > and created_time = #{createdTime,jdbcType=BIGINT} </if>
				<if test="fileLength != null" > and file_length = #{fileLength,jdbcType=BIGINT} </if>
				<if test="fileKey != null" > and file_key = #{fileKey,jdbcType=VARCHAR} </if>
				<if test="bucketName != null" > and bucket_name = #{bucketName,jdbcType=VARCHAR} </if>
				<if test="fileName != null" > and file_name = #{fileName,jdbcType=VARCHAR} </if>
				<if test="fileSuffix != null" > and file_suffix = #{fileSuffix,jdbcType=VARCHAR} </if>
				<if test="fileStatusList != null">
					and file_status in 
					<foreach collection="fileStatusList" item="fs" index="index" open="(" close=")" separator=",">
			            #{fs}
			        </foreach>
				</if>
				<if test="fileworktypeList != null"> 
					and file_worktype in
					<foreach collection="fileworktypeList" item="fileworktypeList" index="index" open="(" close=")" separator=",">
			            #{fileworktypeList}
			        </foreach>
				</if>
				<if test="projectIdList != null"> 
					and project_id in
					<foreach collection="projectIdList" item="id" index="index" open="(" close=")" separator=",">
			            #{id}
			        </foreach>
				</if>
				
				<if test="projectLikeIdList!=null or fileULikeidList!=null"> 
					and (
					<trim prefixOverrides="or">
						<if test="projectLikeIdList!=null">
							or project_id in
							<foreach collection="projectLikeIdList" item="id" index="index" open="(" close=")" separator=",">
			           	 		#{id}
			        		</foreach>
						</if>
						<if test="fileULikeidList!=null">
							or file_uid in
							<foreach collection="fileULikeidList" item="id" index="index" open="(" close=")" separator=",">
			           	 		#{id}
			        		</foreach>
						</if>
					</trim> 
					)
				</if>
				<if test="ids != null"> 
					and id in
					<foreach collection="ids" item="idItem" index="index" open="(" close=")" separator=",">
			            #{idItem}
			        </foreach>
				</if>
				<if test="recordType != null"> and record_type = #{recordType,jdbcType=TINYINT} </if>			
				<!-- 模糊查询 -->
				<!-- <if test="nameLike != null">and name like CONCAT("%",#{nameLike},"%")</if> -->
			</trim>
		</where>
		
	</sql>
	<!-- 根据ID查询-->
	<select id="selectById" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sop_file
		where id = #{id,jdbcType=BIGINT}
	</select>
	
	<!-- 查询 -->
	<select id="select" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from sop_file
		<include refid="Base_Where_Clause" />
		<if test="sorting != null">order by ${sorting}</if>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<!-- 查询 -->
	<select id="selectByProjectId" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from sop_file
		<where>
			<trim prefixOverrides="and">
				<if test="projectId != null" >project_id = #{projectId,jdbcType=BIGINT} </if>
				<if test="fileWorktype != null" > and file_worktype = #{fileWorktype,jdbcType=VARCHAR} </if>
				<if test="recordType != null"> and record_type = #{recordType,jdbcType=TINYINT} </if>	
			</trim>
		</where>
	</select>
	
	<!-- 查询总数 -->
	<select id="selectCount" resultType="java.lang.Long"
		parameterType="java.util.Map">
		select count(id) from sop_file
		<include refid="Base_Where_Clause" />
		<if test="sorting != null">order by ${sorting}</if>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<!-- 删除 -->
	<delete id="delete" parameterType="java.util.Map">
		delete from sop_file
		<include refid="Base_Where_Clause" />
	</delete>
	
	<!-- 根据ID删除 -->
	<delete id="deleteById" parameterType="java.lang.Long">
		delete from sop_file
		where id = #{id,jdbcType=BIGINT}
	</delete>
	
 	<insert id="insert" useGeneratedKeys="true" keyProperty="id"  parameterType="SopFilePO">
 		insert into sop_file (id, project_id, belong_uid, file_valid, project_progress,
 		file_worktype, career_line, file_source,
 		file_type, remark, voucher_id, file_status,
 		file_uid, fil_uri, updated_time,
 		created_time, file_length, file_key,
 		bucket_name,file_name,file_suffix,record_type)
 		values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{belongUid,jdbcType=BIGINT}, #{fileValid,jdbcType=INTEGER},
 		#{projectProgress,jdbcType=VARCHAR},
 		#{fileWorktype,jdbcType=VARCHAR}, #{careerLine,jdbcType=BIGINT}, #{fileSource,jdbcType=VARCHAR},
 		#{fileType,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},#{voucherId,jdbcType=BIGINT},
 		#{fileStatus,jdbcType=VARCHAR},
 		#{fileUid,jdbcType=BIGINT}, #{filUri,jdbcType=VARCHAR}, #{updatedTime,jdbcType=BIGINT},
 		#{createdTime,jdbcType=BIGINT}, #{fileLength,jdbcType=BIGINT},
 		#{fileKey,jdbcType=VARCHAR},
 		#{bucketName,jdbcType=VARCHAR},
 		#{fileName,jdbcType=VARCHAR},
 		#{fileSuffix,jdbcType=VARCHAR},
 		#{recordType,jdbcType=TINYINT})
 	</insert>
	
	<update id="updateByIdSelective" parameterType="SopFilePO">
		update sop_file
		<set>
			<if test="projectId != null"> project_id = #{projectId,jdbcType=BIGINT}, </if>
			<if test="belongUid != null"> belong_uid = #{belongUid,jdbcType=BIGINT}, </if>
			<if test="fileValid != null"> file_valid = #{fileValid,jdbcType=INTEGER}, </if>
			<if test="projectProgress != null"> project_progress = #{projectProgress,jdbcType=VARCHAR}, </if>
			<if test="fileWorktype != null"> file_worktype = #{fileWorktype,jdbcType=VARCHAR}, </if>
			<if test="careerLine != null"> career_line = #{careerLine,jdbcType=BIGINT}, </if>
			<if test="fileSource != null"> file_source = #{fileSource,jdbcType=VARCHAR}, </if>
			<if test="fileType != null"> file_type = #{fileType,jdbcType=VARCHAR}, </if>
			<if test="remark != null"> remark = #{remark,jdbcType=VARCHAR}, </if>
			<if test="voucherId != null"> voucher_id = #{voucherId,jdbcType=BIGINT}, </if>
			<if test="fileStatus != null"> file_status = #{fileStatus,jdbcType=VARCHAR}, </if>
			<if test="fileUid != null"> file_uid = #{fileUid,jdbcType=BIGINT}, </if>
			<if test="filUri != null"> fil_uri = #{filUri,jdbcType=VARCHAR}, </if>
			<if test="updatedTime != null"> updated_time = #{updatedTime,jdbcType=BIGINT}, </if>
			<if test="createdTime != null"> created_time = #{createdTime,jdbcType=BIGINT}, </if>
			<if test="fileLength != null"> file_length = #{fileLength,jdbcType=BIGINT}, </if>
			<if test="fileKey != null"> file_key = #{fileKey,jdbcType=VARCHAR}, </if>
			<if test="bucketName != null"> bucket_name = #{bucketName,jdbcType=VARCHAR}, </if>
			<if test="fileName != null"> file_name = #{fileName,jdbcType=VARCHAR}, </if>
			<if test="fileSuffix != null"> file_suffix = #{fileSuffix,jdbcType=VARCHAR}, </if>
		</set>
		<where>
			<trim prefixOverrides="and">
				<if test="id != null"> and id =#{id}</if>
				<if test="projectId != null" >and project_id = #{projectId,jdbcType=BIGINT} </if>
				<if test="recordType != null"> and record_type = #{recordType,jdbcType=TINYINT} </if>
				<if test="fileWorktype != null"> and file_worktype = #{fileWorktype,jdbcType=VARCHAR} </if>		
			</trim>
		</where>
	</update>
	<update id="updateById" parameterType="SopFilePO">
		update sop_file
		<set>
			<if test="projectId != null"> project_id = #{projectId,jdbcType=BIGINT}, </if>
			<if test="belongUid != null"> belong_uid = #{belongUid,jdbcType=BIGINT}, </if>
			<if test="fileValid != null"> file_valid = #{fileValid,jdbcType=INTEGER}, </if>
			<if test="projectProgress != null"> project_progress = #{projectProgress,jdbcType=VARCHAR}, </if>
			<if test="fileWorktype != null"> file_worktype = #{fileWorktype,jdbcType=VARCHAR}, </if>
			<if test="careerLine != null"> career_line = #{careerLine,jdbcType=BIGINT}, </if>
			<if test="fileSource != null"> file_source = #{fileSource,jdbcType=VARCHAR}, </if>
			<if test="fileType != null"> file_type = #{fileType,jdbcType=VARCHAR}, </if>
			<if test="remark != null"> remark = #{remark,jdbcType=VARCHAR}, </if>
			<if test="voucherId != null"> voucher_id = #{voucherId,jdbcType=BIGINT}, </if>
			<if test="fileStatus != null"> file_status = #{fileStatus,jdbcType=VARCHAR}, </if>
			<if test="fileUid != null"> file_uid = #{fileUid,jdbcType=BIGINT}, </if>
			<if test="filUri != null"> fil_uri = #{filUri,jdbcType=VARCHAR}, </if>
			<if test="updatedTime != null"> updated_time = #{updatedTime,jdbcType=BIGINT}, </if>
			<if test="createdTime != null"> created_time = #{createdTime,jdbcType=BIGINT}, </if>
			<if test="fileLength != null"> file_length = #{fileLength,jdbcType=BIGINT}, </if>
			<if test="fileKey != null"> file_key = #{fileKey,jdbcType=VARCHAR}, </if>
			<if test="bucketName != null"> bucket_name = #{bucketName,jdbcType=VARCHAR}, </if>
			<if test="fileName != null"> file_name = #{fileName,jdbcType=VARCHAR}, </if>
			<if test="fileSuffix != null"> file_suffix = #{fileSuffix,jdbcType=VARCHAR}, </if>
			<if test="recordType != null"> record_type = #{recordType,jdbcType=TINYINT},</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	
	
	
	
	<!-- 根据worktypeList查询 -->
	<select id="selectFileListByType" resultMap="BaseResultMap" parameterType="com.galaxyinternet.bo.sopfile.SopFileBo">
		select
		<include refid="Base_Column_List" />
		from sop_file
		<where>
			<trim prefixOverrides="and">
				<if test="projectId != null" > and project_id = #{projectId,jdbcType=BIGINT} </if>
				<if test="fileValid != null" >and file_valid = #{fileValid,jdbcType=INTEGER} </if>
				<if test="projectProgress != null" > and project_progress = #{projectProgress} </if>
				<if test="fileworktypeList != null and fileworktypeList.size() > 0" > 
					and file_worktype in
					<foreach collection="fileworktypeList" item="fileworktypeList" index="index" open="(" close=")" separator=",">
			            #{fileworktypeList}
			        </foreach>
				</if>
				<if test="recordType != null"> and record_type = #{recordType,jdbcType=TINYINT} </if>	
			</trim>
		</where>
	</select>
	
	<!-- 根据worktypeList查询 -->
	<select id="queryByProjectAndFileWorkType" resultMap="BaseResultMap" parameterType="SopFilePO">
		select
		<include refid="Base_Column_List" />
		from sop_file
		<where>
			<trim prefixOverrides="and">
				<if test="projectId != null" > and project_id = #{projectId,jdbcType=BIGINT} </if>
				<if test="fileValid != null" >and file_valid = #{fileValid,jdbcType=INTEGER} </if>
				<if test="fileWorktype != null" > and  file_worktype = #{fileWorktype,jdbcType=VARCHAR} </if>
				<if test="recordType != null"> and record_type = #{recordType,jdbcType=TINYINT} </if>	
			</trim>
		</where>
	</select>
	
	<!-- 批量查询项目名称 -->
	<select id="queryProjectName" resultType="java.util.Map" parameterType="java.util.Map">
		select
		id,project_name
		from sop_project
		<where>
			id IN
				<foreach collection="list" index="item" item="item" open="("
	                      separator="," close=")">
	                  #{item.projectId}
                </foreach>
		</where>
	</select>
	

	
	
	
</mapper>