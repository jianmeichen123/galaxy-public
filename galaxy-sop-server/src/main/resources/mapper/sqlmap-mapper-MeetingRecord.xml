<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.galaxyinternet.model.project.MeetingRecord" >

  <resultMap id="BaseResultMap" type="com.galaxyinternet.model.project.MeetingRecord" >
  	<id column="id" property="id" jdbcType="BIGINT" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
    <result column="file_id" property="fileId" jdbcType="BIGINT" />
    <result column="meeting_date" property="meetingDate" jdbcType="TIMESTAMP" />
    <result column="meeting_type" property="meetingType" jdbcType="VARCHAR" />
    <result column="meeting_result" property="meetingResult" jdbcType="VARCHAR" />
    <result column="meeting_notes" property="meetingNotes" jdbcType="VARCHAR" />
    <result column="meeting_notes_text" property="meetingNotesText" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="BIGINT" />
    <result column="record_type" jdbcType="TINYINT" property="recordType" />
    <result column="create_uid" property="createUid" jdbcType="BIGINT" />
    <result column="participant" jdbcType="VARCHAR" property="participant" />
    <result column="meet_valid" jdbcType="TINYINT" property="meetValid" />
    <result column="meeting_name" jdbcType="BIGINT" property="meetingName" />
    
    <result column="update_time" property="updatedTime" jdbcType="BIGINT" />
   
    <result column="departId"  property="departId" />
    <result column="passMeetNum"  property="passMeetNum" />
    <result column="sumProNum"  property="sumProNum" />
    <result column="first_meet_time"  property="firstMeetTime" jdbcType="TIMESTAMP" />
    <result column="pass_meet_time"  property="passMeetTime" jdbcType="TIMESTAMP" />
    
    <result column="first_created_time" property="firstCreatedTime" jdbcType="BIGINT" />
    <result column="last_created_time" property="lastCreatedTime" jdbcType="BIGINT" />
    <result column="result_reason" property="resultReason" jdbcType="VARCHAR" />
    <result column="reason_other" property="reasonOther" jdbcType="VARCHAR" />
    <result column="project_create_uid" property="projectCreateUid" jdbcType="BIGINT" />
  </resultMap>
  
  
  <sql id="Base_Column_List" >
    id, project_id, file_id, meeting_date, meeting_type, meeting_result, meeting_notes, meeting_notes_text,created_time,record_type,create_uid,participant,meet_valid,meeting_name,result_reason,reason_other
    ,(SELECT create_uid FROM sop_project sub_proj WHERE sub_proj.id = project_id) AS project_create_uid
  </sql>
  
  
  <sql id="Base_Where_Clause">
		<where>
			<trim prefixOverrides="and">
			  <if test="id != null"> and id =#{id}</if>
			  
			  <if test="projectId != null" >and project_id = #{projectId,jdbcType=BIGINT} </if>
			  
			  <if test="proIdList != null">
					and project_id in
					<foreach collection="proIdList" index="item" item="item" open="(" separator="," close=")" >
						#{item}
					</foreach>
			   </if>
			  <if test="fileId != null" >and file_id = #{fileId,jdbcType=BIGINT} </if>
			  
		      <if test="meetingDate != null" >and meeting_date = #{meetingDate,jdbcType=TIMESTAMP} </if>
		      <if test="startTime != null"> <![CDATA[  and meeting_date >= #{startTime,jdbcType=TIMESTAMP} ]]> </if>
			   <if test="endTime != null"> <![CDATA[ and meeting_date <= #{endTime,jdbcType=TIMESTAMP} ]]> </if>
			   
			   <if test="meetingType != null" >and meeting_type = #{meetingType,jdbcType=VARCHAR} </if>
			   
			   <choose>
			   		<when test="meetingTypeList !=null">
			   			and meeting_type in 
							<foreach collection="meetingTypeList" item="meetingType" index="index" open="(" close=")" separator=",">
								#{meetingType}
							</foreach>
			   		</when>
			   </choose>
			  <if test="meetingTypeNull !=null"> and 1 = 2</if>
			   
		      <if test="meetingResult != null" >and meeting_result = #{meetingResult,jdbcType=VARCHAR} </if>
		      <if test="meetingNotes != null" >and meeting_notes = #{meetingNotes,jdbcType=VARCHAR} </if>
		      <if test="meetingNotesText != null" >and meeting_notes_text = #{meetingNotesText,jdbcType=VARCHAR} </if>
		      <if test="createdTime != null" >and created_time = #{createdTime,jdbcType=BIGINT} </if>
			  <if test="recordType != null"> and record_type = #{recordType,jdbcType=TINYINT} </if>	
			  <if test="createUid != null" >and create_uid = #{createUid,jdbcType=BIGINT} </if>
			  <if test="meetValid != null"> and meet_valid = #{meetValid,jdbcType=TINYINT} </if>	
			  <if test="meetingName != null" >and meeting_name = #{meetingName,jdbcType=BIGINT} </if>
			  <if test="resultReason != null" > and result_reason = #{resultReason,jdbcType=VARCHAR} </if>
			  <if test="reasonOther != null" > and reason_other = #{reasonOther,jdbcType=VARCHAR} </if>
			  <if test="passLXFlag != null" > and (meeting_result = 'meeting3Result:2' or meeting_result ='meeting3Result:3' or meeting_result ='meeting3Result:5') </if>
			  <if test="passNPFlag != null" > and (meeting_result = 'meeting1Result:1' or meeting_result ='meeting1Result:2') </if>
		  </trim>
		</where>
		<!-- <if test="sorting != null">order by ${sorting}</if> -->
		<if test="property != null">
			order by ${property} <if test="direction != null">${direction}</if>
			,created_time <if test="direction != null">${direction}</if>
		</if>
		<if test="property == null">
			order by meeting_date desc,created_time desc
		</if>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</sql>
	
	<!-- 查询总数 -->
	<select id="selectCount" resultType="java.lang.Long" parameterType="java.util.Map">
		select count(id) from sop_meeting_record
		<include refid="Base_Where_Clause" />
	</select>

	<!-- 查询 -->
	<select id="select" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from sop_meeting_record
		<include refid="Base_Where_Clause" />
	</select>

	<!-- 根据ID查询 -->
	<select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from sop_meeting_record where id = #{id}
	</select>
	
  	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.galaxyinternet.model.project.MeetingRecord" >
	    <![CDATA[
	    insert into sop_meeting_record (id, project_id, file_id, 
	      meeting_date, meeting_type, meeting_result, 
	      meeting_notes, meeting_notes_text,created_time,record_type,create_uid,participant,meet_valid,meeting_name,update_time,result_reason,reason_other)
	    values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{fileId,jdbcType=BIGINT}, 
	      #{meetingDate,jdbcType=TIMESTAMP}, #{meetingType,jdbcType=VARCHAR}, #{meetingResult,jdbcType=VARCHAR}, 
	      #{meetingNotes,jdbcType=VARCHAR}, #{meetingNotesText,jdbcType=VARCHAR},#{createdTime,jdbcType=BIGINT},#{recordType,jdbcType=TINYINT}, 
	     #{createUid,jdbcType=BIGINT}, #{participant,jdbcType=VARCHAR},#{meetValid,jdbcType=TINYINT},#{meetingName,jdbcType=BIGINT},#{createdTime,jdbcType=BIGINT}
	     ,#{resultReason,jdbcType=VARCHAR},#{reasonOther,jdbcType=VARCHAR})
	    ]]>
    </insert>
    
    <!-- 更新 -->
	<update id="updateByIdSelective" parameterType="com.galaxyinternet.model.project.MeetingRecord">
		update sop_meeting_record
		<set>
			<if test="projectId != null" > project_id = #{projectId,jdbcType=BIGINT}, </if>
			<if test="fileId != null" > file_id = #{fileId,jdbcType=BIGINT}, </if>
		    <if test="meetingDate != null" > meeting_date = #{meetingDate,jdbcType=TIMESTAMP}, </if>
		    <if test="meetingType != null" > meeting_type = #{meetingType,jdbcType=VARCHAR}, </if>
		    <if test="meetingResult != null" > meeting_result = #{meetingResult,jdbcType=VARCHAR}, </if>
		    <if test="meetingNotes != null" > meeting_notes = #{meetingNotes,jdbcType=VARCHAR}, </if>
		    <if test="meetingNotesText != null" > meeting_notes_text = #{meetingNotesText,jdbcType=VARCHAR}, </if>
		    <if test="createdTime != null" > created_time = #{createdTime,jdbcType=BIGINT}, </if>
		    <if test="createUid != null" > create_uid = #{createUid,jdbcType=BIGINT}, </if>
		    <if test="meetValid != null">  meet_valid = #{meetValid,jdbcType=TINYINT}, </if>
		    <if test="meetingName != null" > meeting_name = #{meetingName,jdbcType=BIGINT}, </if>
		    <if test="updatedTime != null" > update_time = #{updatedTime,jdbcType=BIGINT}, </if>
		    <if test="resultReason != null" > result_reason = #{resultReason,jdbcType=BIGINT}, </if>
		    <if test="reasonOther != null" > reason_other = #{reasonOther,jdbcType=BIGINT} </if>
		</set>
		where id = #{id}
	</update>
	
	<!-- 更新 -->
	<update id="updateByProjectId" parameterType="com.galaxyinternet.model.project.MeetingRecord">
		update sop_meeting_record
		<set>
		    <if test="meetValid != null">  meet_valid = #{meetValid,jdbcType=TINYINT}</if>
		</set>
		where project_id = #{projectId}
	</update>
    <!-- 通过ID更新 -->
	<update id="updateById" parameterType="com.galaxyinternet.model.project.MeetingRecord">
		update sop_meeting_record
		<set>
			<if test="projectId != null" > project_id = #{projectId,jdbcType=BIGINT}, </if>
			<if test="fileId != null" > file_id = #{fileId,jdbcType=BIGINT}, </if>
		    <if test="meetingDate != null" > meeting_date = #{meetingDate,jdbcType=TIMESTAMP}, </if>
		    <if test="meetingType != null" > meeting_type = #{meetingType,jdbcType=VARCHAR}, </if>
		    <if test="meetingResult != null" > meeting_result = #{meetingResult,jdbcType=VARCHAR}, </if>
		    <if test="meetingNotes != null" > meeting_notes = #{meetingNotes,jdbcType=VARCHAR}, </if>
		    <if test="meetingNotesText != null" > meeting_notes_text = #{meetingNotesText,jdbcType=VARCHAR}, </if>
		    <if test="createdTime != null" > created_time = #{createdTime,jdbcType=BIGINT}, </if>
		    <if test="createUid != null" > create_uid = #{createUid,jdbcType=BIGINT}, </if>
		    <if test="recordType != null"> record_type = #{recordType,jdbcType=TINYINT},</if>
		    <if test="participant != null" > meeting_result = #{participant,jdbcType=VARCHAR}, </if>
		    <if test="meetValid != null">  meet_valid = #{meetValid,jdbcType=TINYINT}, </if>
		    <if test="meetingName != null" > meeting_name = #{meetingName,jdbcType=BIGINT}, </if>
		    <if test="updatedTime != null" > update_time = #{updatedTime,jdbcType=BIGINT},</if>
		    <if test="resultReason != null" > result_reason = #{resultReason,jdbcType=BIGINT}, </if>
		    <if test="reasonOther != null" > reason_other = #{reasonOther,jdbcType=BIGINT} </if>
		</set>
		where id = #{id}
	</update>
	
    
    <!-- 删除 -->
	<delete id="delete" parameterType="java.util.Map">
		delete from sop_meeting_record
		<include refid="Base_Where_Clause" />
	</delete>
     <!-- 根据ID删除 -->
	<delete id="deleteById" parameterType="com.galaxyinternet.model.project.MeetingRecord">
		delete from sop_meeting_record where id = #{id}
	</delete>
  
  
  
  
	<resultMap id="PageResultMap" type="com.galaxyinternet.bo.project.MeetingRecordBo" >
		<id column="id" property="id" jdbcType="BIGINT" />
	    <result column="project_id" property="projectId" jdbcType="BIGINT" />
	    <result column="project_name" property="proName" jdbcType="BIGINT" />
	    <result column="file_id" property="fileId" jdbcType="BIGINT" />
	    <result column="meeting_date" property="meetingDate" jdbcType="TIMESTAMP" />
	    <result column="meeting_type" property="meetingType" jdbcType="VARCHAR" />
	    <result column="meeting_result" property="meetingResult" jdbcType="VARCHAR" />
	    <result column="meeting_notes" property="meetingNotes" jdbcType="VARCHAR" />
	    <result column="meeting_notes_text" property="meetingNotesText" jdbcType="VARCHAR" />
	    <result column="created_time" property="createdTime" jdbcType="BIGINT" />
	    <result column="meeting_name" property="meetingName" jdbcType="BIGINT" />
	</resultMap>
	
  
	<!-- 查询 -->
	<select id="selectMeetPage" resultMap="PageResultMap" parameterType="java.util.Map">
		select
			sm.id, sm.project_id, p.project_name, sm.file_id, sm.meeting_date, sm.meeting_type, 
			sm.meeting_result, sm.meeting_notes,sm.meeting_notes_text, sm.created_time
		from sop_meeting_record sm , sop_project p 
		where sm.project_id = p.id
			<if test="uid != null"> and p.create_uid = #{uid,jdbcType=BIGINT} </if>
			<if test="projectId != null"> and p.id = #{projectId,jdbcType=BIGINT} </if>
			<if test="meetingType != null"> and sm.meeting_type = #{meetingType} </if>
			<if test="startTime != null"> <![CDATA[  and sm.meeting_date >= #{startTime,jdbcType=TIMESTAMP} ]]> </if>
			<if test="endTime != null"> <![CDATA[ and sm.meeting_date <= #{endTime,jdbcType=TIMESTAMP} ]]> </if>
			<if test="keyword != null">
				and (
					p.project_name like CONCAT("%",#{keyword},"%") <if test="escapeChar ">  escape '/'  </if>
				 or p.project_code like CONCAT("%",#{keyword},"%") <if test="escapeChar ">  escape '/'  </if>
				)
			</if>
			<if test="recordType != null"> and sm.record_type = #{recordType,jdbcType=TINYINT} </if>	
			<!-- 模糊查询  like '%${params.param}%' -->
			<!-- <if test="nameLike != null">and name like CONCAT("%",#{nameLike},"%")</if> -->
		order by sm.meeting_date desc,sm.created_time desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<!-- 查询 -->
	<select id="selectMeetCount" resultType="java.lang.Long" parameterType="java.util.Map">
	  select count(*) from (
	  	select
			sm.id, sm.project_id, p.project_name, sm.file_id, sm.meeting_date, sm.meeting_type, 
			sm.meeting_result, sm.meeting_notes, sm.meeting_notes_text,sm.created_time
		from sop_meeting_record sm , sop_project p 
		where sm.project_id = p.id
			<if test="uid != null"> and p.create_uid = #{uid,jdbcType=BIGINT} </if>
			<if test="projectId != null"> and p.id = #{projectId,jdbcType=BIGINT} </if>
			<if test="meetingType != null"> and sm.meeting_type = #{meetingType} </if>
			<if test="startTime != null"> <![CDATA[  and sm.meeting_date >= #{startTime,jdbcType=TIMESTAMP} ]]> </if>
			<if test="endTime != null"> <![CDATA[ and sm.meeting_date <= #{endTime,jdbcType=TIMESTAMP} ]]> </if>
			<if test="keyword != null">
				and (
					p.project_name like CONCAT("%",#{keyword},"%")  <if test="escapeChar ">  escape '/'  </if>
					or p.project_code like CONCAT("%",#{keyword},"%") <if test="escapeChar ">  escape '/'  </if>
				)
			</if>
			<if test="recordType != null"> and sm.record_type = #{recordType,jdbcType=TINYINT} </if>	
		) a
	</select>
	
	
	<!-- 根据项目及类型查询会议名称的序号-->
	<select id="selectMeetNumberByType" resultType="java.lang.Long" parameterType="java.util.Map">
	  	select max(meeting_name) from sop_meeting_record
	  	where meeting_type = #{meetingType}
	  	and	  project_id = #{projectId}
	</select>
	
	

	
	
	
	
	
	
	
	
	
	<!-- report -->
	
	
	<!-- 查询总数 -->
	<select id="selectMeetCountByGHL" resultType="java.lang.Long" parameterType="java.util.Map">
		select count(*) 
		from sop_meeting_record meet,sop_project pro
		where
			meet.project_id = pro.id
			
	      <if test="startTime != null"> <![CDATA[  and meet.meeting_date >= #{startTime,jdbcType=TIMESTAMP} ]]> </if>
		   <if test="endTime != null"> <![CDATA[ and meet.meeting_date <= #{endTime,jdbcType=TIMESTAMP} ]]> </if>
		   
		   <if test="meetingType != null" >and meet.meeting_type = #{meetingType,jdbcType=VARCHAR} </if>
		  
	      <if test="meetingResult != null" >and meet.meeting_result = #{meetingResult,jdbcType=VARCHAR} </if>
		  
		  <if test="recordType != null"> and meet.record_type = #{recordType,jdbcType=TINYINT} </if>	
		  
		  <if test="projectType != null"> and pro.project_type = #{projectType,jdbcType=VARCHAR} </if>
		  <if test="departId != null"> and pro.project_departId = #{departId,jdbcType=BIGINT} </if>
	</select>
	
	
	<select id="selectUserPassMeetNum" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
			pro.create_uid, pro.project_departId departId, count(meet.id) passMeetNum
		from sop_meeting_record meet,sop_project pro
		where
			meet.project_id = pro.id
			<if test="projectType != null"> and pro.project_type = #{projectType,jdbcType=VARCHAR} </if>
			<if test="departId != null"> and pro.project_departId = #{departId,jdbcType=BIGINT} </if>
			<if test="userIdList != null">
				AND pro.create_uid IN
				<foreach collection="userIdList" index="item" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			
			<if test="startTime != null"> <![CDATA[  and meet.meeting_date >= #{startTime,jdbcType=TIMESTAMP} ]]> </if>
			<if test="endTime != null"> <![CDATA[ and meet.meeting_date <= #{endTime,jdbcType=TIMESTAMP} ]]> </if>
		
			<if test="meetingType != null">and meet.meeting_type = #{meetingType,jdbcType=VARCHAR} </if>
		
			<if test="meetingResult != null">and meet.meeting_result = #{meetingResult,jdbcType=VARCHAR} </if>
		
			<if test="recordType != null"> and meet.record_type = #{recordType,jdbcType=TINYINT} </if>
	
		GROUP BY pro.create_uid
	</select>
	
  
   <select id="selectDeptPassMeetNum" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
			pro.project_departId departId, count(meet.id) passMeetNum
		from sop_meeting_record meet,sop_project pro
		where
			meet.project_id = pro.id
			<if test="projectType != null"> and pro.project_type = #{projectType,jdbcType=VARCHAR} </if>
			<if test="userIdList != null">
				AND pro.create_uid IN
				<foreach collection="userIdList" index="item" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			
			<if test="deptIdList != null">
				AND pro.project_departId IN
				<foreach collection="deptIdList" index="item" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			
			<if test="startTime != null"> <![CDATA[  and meet.meeting_date >= #{startTime,jdbcType=TIMESTAMP} ]]> </if>
			<if test="endTime != null"> <![CDATA[ and meet.meeting_date <= #{endTime,jdbcType=TIMESTAMP} ]]> </if>
		
			<if test="meetingType != null">and meet.meeting_type = #{meetingType,jdbcType=VARCHAR} </if>
		
			<if test="meetingResult != null">and meet.meeting_result = #{meetingResult,jdbcType=VARCHAR} </if>
		
			<if test="recordType != null"> and meet.record_type = #{recordType,jdbcType=TINYINT} </if>
	
		GROUP BY pro.project_departId
	</select>
  
  
  <select id="selectHasMeetPro" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
			pro.id project_id,pro.project_departId departId
		from sop_meeting_record meet,sop_project pro
		where
			meet.project_id = pro.id
			
			<if test="startTime != null"> <![CDATA[  and meet.meeting_date >= #{startTime,jdbcType=TIMESTAMP} ]]> </if>
			<if test="endTime != null"> <![CDATA[ and meet.meeting_date <= #{endTime,jdbcType=TIMESTAMP} ]]> </if>
		
			<if test="meetingType != null">and meet.meeting_type = #{meetingType,jdbcType=VARCHAR} </if>
		
			<if test="meetingResult != null">and meet.meeting_result = #{meetingResult,jdbcType=VARCHAR} </if>
		
			<if test="recordType != null"> and meet.record_type = #{recordType,jdbcType=TINYINT} </if>
			
			<if test="projectType != null"> and pro.project_type = #{projectType,jdbcType=VARCHAR} </if>
			<if test="userIdList != null">
				AND pro.create_uid IN
				<foreach collection="userIdList" index="item" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			
			<if test="deptIdList != null">
				AND pro.project_departId IN
				<foreach collection="deptIdList" index="item" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		GROUP BY pro.id
	</select>
	
	
	
	
	<select id="selectDeptHasMeetProNumByParams" resultMap="BaseResultMap" parameterType="java.util.Map">
		SELECT  a.departId,a.create_uid, COUNT(a.project_id) sumProNum
		FROM
			(
			SELECT
				pro.id project_id, pro.create_uid,pro.project_departId departId
			FROM 
				sop_meeting_record meet,sop_project pro
			WHERE
				meet.project_id = pro.id
				<if test="startTime != null"> <![CDATA[  and meet.meeting_date >= #{startTime,jdbcType=TIMESTAMP} ]]> </if>
				<if test="endTime != null"> <![CDATA[ and meet.meeting_date <= #{endTime,jdbcType=TIMESTAMP} ]]> </if>
			
				<if test="meetingType != null">and meet.meeting_type = #{meetingType,jdbcType=VARCHAR} </if>
			
				<if test="meetingResult != null">and meet.meeting_result = #{meetingResult,jdbcType=VARCHAR} </if>
			
				<if test="recordType != null"> and meet.record_type = #{recordType,jdbcType=TINYINT} </if>
				
				<if test="projectType != null"> and pro.project_type = #{projectType,jdbcType=VARCHAR} </if>
				<if test="userIdList != null">
					AND pro.create_uid IN
					<foreach collection="userIdList" index="item" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				
				<if test="deptIdList != null">
					AND pro.project_departId IN
					<foreach collection="deptIdList" index="item" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
			GROUP BY pro.id	
			) a
		GROUP BY a.departId
	</select>
	
	
	
	<select id="selectTzjlHasMeetProNumByParams" resultMap="BaseResultMap" parameterType="java.util.Map">
		SELECT  a.departId,a.create_uid, COUNT(a.project_id) sumProNum
		FROM
			(
			SELECT
				pro.id project_id, pro.create_uid,pro.project_departId departId
			FROM 
				sop_meeting_record meet,sop_project pro
			WHERE
				meet.project_id = pro.id
				<if test="startTime != null"> <![CDATA[  and meet.meeting_date >= #{startTime,jdbcType=TIMESTAMP} ]]> </if>
				<if test="endTime != null"> <![CDATA[ and meet.meeting_date <= #{endTime,jdbcType=TIMESTAMP} ]]> </if>
			
				<if test="meetingType != null">and meet.meeting_type = #{meetingType,jdbcType=VARCHAR} </if>
			
				<if test="meetingResult != null">and meet.meeting_result = #{meetingResult,jdbcType=VARCHAR} </if>
			
				<if test="recordType != null"> and meet.record_type = #{recordType,jdbcType=TINYINT} </if>
				
				<if test="projectType != null"> and pro.project_type = #{projectType,jdbcType=VARCHAR} </if>
				<if test="userIdList != null">
					AND pro.create_uid IN
					<foreach collection="userIdList" index="item" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				
				<if test="departId != null"> and pro.project_departId = #{departId,jdbcType=BIGINT} </if>
				<if test="deptIdList != null">
					AND pro.project_departId IN
					<foreach collection="deptIdList" index="item" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
			GROUP BY pro.id	
			) a
		GROUP BY a.create_uid
	</select>
	
	
	
	
	<select id="selectMeetFirstTimeAndPassTime" resultMap="BaseResultMap" parameterType="java.util.Map">
		SELECT 
			a.*,b.pass_meet_time,b.last_created_time
		FROM 
			(
			SELECT 
				project_id,meeting_type,MIN(meeting_date) first_meet_time,MIN(created_time) first_created_time
			FROM 
				sop_meeting_record 
			WHERE 
			  <trim prefixOverrides="and">
			    <if test="proIdList != null">
					and project_id in
					<foreach collection="proIdList" index="item" item="item" open="(" separator="," close=")" >
						#{item}
					</foreach>
			    </if>
				<if test="startTime != null"> <![CDATA[  and meeting_date >= #{startTime,jdbcType=TIMESTAMP} ]]> </if>
				<if test="endTime != null"> <![CDATA[ and meeting_date <= #{endTime,jdbcType=TIMESTAMP} ]]> </if>
			
				<if test="meetingType != null">and meeting_type = #{meetingType,jdbcType=VARCHAR} </if>
				<if test="recordType != null"> and record_type = #{recordType,jdbcType=TINYINT} </if>
			  </trim>
			GROUP BY project_id,meeting_type
			) a
			LEFT JOIN
			(
			SELECT 
				project_id,meeting_type,MAX(meeting_date) pass_meet_time,MAX(created_time) last_created_time
			FROM 
				sop_meeting_record 
			WHERE 
			  <trim prefixOverrides="and">
			 	 <if test="proIdList != null">
					and project_id in
					<foreach collection="proIdList" index="item" item="item" open="(" separator="," close=")" >
						#{item}
					</foreach>
			    </if>
				<if test="startTime != null"> <![CDATA[  and meeting_date >= #{startTime,jdbcType=TIMESTAMP} ]]> </if>
				<if test="endTime != null"> <![CDATA[ and meeting_date <= #{endTime,jdbcType=TIMESTAMP} ]]> </if>
				<if test="meetingType != null">and meeting_type = #{meetingType,jdbcType=VARCHAR} </if>
				<if test="meetingResult != null">and meeting_result = #{meetingResult,jdbcType=VARCHAR} </if>
				<if test="recordType != null"> and record_type = #{recordType,jdbcType=TINYINT} </if>
			  </trim>
			GROUP BY project_id,meeting_type
			)b
			ON a.project_id = b.project_id AND a.meeting_type = b.meeting_type
	</select>
	
	
</mapper>