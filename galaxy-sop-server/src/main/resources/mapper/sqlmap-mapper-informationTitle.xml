<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.galaxyinternet.model.hologram.InformationTitle">

	<resultMap id="BaseResultMap" type="com.galaxyinternet.model.hologram.InformationTitle">
	
		<id column="id" 			jdbcType="BIGINT" 		property="id" />
		<result column="parent_id"  jdbcType="VARCHAR" 		property="parentId" />
		<result column="code" 		jdbcType="VARCHAR" 		property="code" />
		<result column="name" 		jdbcType="VARCHAR" 		property="name" />
		<result column="index_no" 	jdbcType="DOUBLE" 		property="indexNo" />
		<result column="type" 		jdbcType="INTEGER" 		property="type" />
		<result column="sign" 		jdbcType="INTEGER" 		property="sign" />
		<result column="content" 	jdbcType="VARCHAR" 		property="content" />
		<result column="is_show" 	jdbcType="CHAR" 		property="isShow" />
		<result column="is_valid" 	jdbcType="INTEGER" 		property="isValid" />
		<result column="placeholder"  jdbcType="VARCHAR" 		property="placeholder" />
		<result column="created_time" jdbcType="BIGINT" 	property="createdTime" />
		<result column="create_id" 	jdbcType="BIGINT" 		property="createId" />
		<result column="updated_time" jdbcType="BIGINT" 	property="updatedTime" />
		<result column="update_id" 	jdbcType="BIGINT" 		property="updateId" />
		
		<result column="is_must" 		jdbcType="INTEGER" 		property="isMust" />
		<result column="val_rule" 	    jdbcType="VARCHAR" 		property="valRule" />
		<result column="val_rule_mark" 	jdbcType="VARCHAR" 		property="valRuleMark" />
		<result column="relate_id"  jdbcType="BIGINT" 		property="relateId" />
		<result column="val_rule_formula" 	jdbcType="VARCHAR" 		property="valRuleFormula" />

		<result column="danao_info" 	jdbcType="VARCHAR" 		property="danaoInfo" />
	</resultMap>



	<sql id="Base_Column_List">
		id, parent_id, code, name, index_no, type, sign, content, is_show, is_valid, placeholder, created_time, create_id, updated_time, update_id,
		is_must,val_rule,val_rule_mark,val_rule_formula,danao_info
	</sql>



	<sql id="Base_Where_Clause">
		<where>
			<trim prefixOverrides="and">
				<if test="id != null"> and id = #{id,jdbcType=BIGINT} </if>

				<if test="titleIds != null">
					and id in
					<foreach collection="titleIds" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>

				<if test="parentId != null"> and  parent_id = #{parentId,jdbcType=VARCHAR} </if>
				<if test="code != null"> and  code = #{code,jdbcType=VARCHAR} </if>
				<if test="name != null"> and  name = #{name,jdbcType=VARCHAR} </if>
				<if test="indexNo != null"> and  index_no = #{indexNo,jdbcType=DOUBLE} </if>
				<if test="type != null"> and  type = #{type,jdbcType=INTEGER} </if>
				<if test="sign != null"> and  sign = #{sign,jdbcType=INTEGER} </if>
				<if test="content != null"> and  content = #{content,jdbcType=VARCHAR} </if>
				<if test="isShow != null"> and  is_show = #{isShow,jdbcType=CHAR} </if>
				<if test="isValid != null"> and  is_valid = #{isValid,jdbcType=INTEGER} </if>
				<if test="placeholder != null"> and  placeholder = #{placeholder,jdbcType=VARCHAR} </if>
				<if test="createdTime != null"> and  created_time = #{createdTime,jdbcType=BIGINT} </if>
				<if test="createId != null"> and  create_id = #{createId,jdbcType=BIGINT} </if>
				<if test="updatedTime != null"> and  updated_time = #{updatedTime,jdbcType=BIGINT} </if>
				<if test="updateId != null"> and  update_id = #{updateId,jdbcType=BIGINT} </if>

				<if test="danaoInfo != null"> and  danao_info = #{danaoInfo,jdbcType=BIGINT} </if>

			</trim>
			
			<if test="idcodekey != null">
				and (
					id = #{idcodekey,jdbcType=BIGINT}
					or 
					code = #{idcodekey,jdbcType=VARCHAR}
				)
			</if>
			
			<!-- <if test="idcodekey != null">
				and (
					id  LIKE '%${idcodekey}%'
			 		<if test="escapeChar ">
			 		  	escape '/' 
			 		</if>
					or 
					code  LIKE '%${idcodekey}%'
			 		<if test="escapeChar ">
			 		  	escape '/' 
			 		</if>
				)
			</if> -->
			
			<if test="sorting != null">order by ${sorting}</if>
			<if test="property != null">order by ${property} ${direction}</if>
			
			<if test="offset != null and limit != null">
				limit #{offset}, #{limit}
			</if>
		</where>
	</sql>


	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.galaxyinternet.model.hologram.InformationTitle">
	    <![CDATA[
	     insert into information_title (
	     	id, 
	     	parent_id, 
	     	code, 
			name, 
			index_no, 
			type, 
			sign, 
			content, 
			is_show,
			is_valid, 
			placeholder,
			created_time, 
			create_id, 
			updated_time, 
			update_id,
			danao_info
		)
		values (
			#{id,jdbcType=BIGINT}, 
			#{parentId,jdbcType=VARCHAR}, 
			#{code,jdbcType=VARCHAR}, 
			#{name,jdbcType=VARCHAR}, 
			#{indexNo,jdbcType=DOUBLE}, 
			#{type,jdbcType=INTEGER}, 
			#{sign,jdbcType=INTEGER}, 
			#{content,jdbcType=VARCHAR}, 
			#{isShow,jdbcType=CHAR}, 
			#{isValid,jdbcType=INTEGER},
			#{placeholder,jdbcType=VARCHAR}, 
			#{createdTime,jdbcType=BIGINT}, 
			#{createId,jdbcType=BIGINT}, 
			#{updatedTime,jdbcType=BIGINT}, 
			#{updateId,jdbcType=BIGINT},
			#{danaoInfo,jdbcType=VARCHAR}
		)
	    ]]>
	</insert>

				
				
	<!-- 查询总数 -->
	<select id="selectCount" resultType="java.lang.Long" parameterType="java.util.Map">
		select count(id) from information_title
		<include refid="Base_Where_Clause" />
	</select>



	<!-- 查询 -->
	<select id="select" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from information_title
		<include refid="Base_Where_Clause" />
	</select>


	<!-- 根据ID查询 -->
	<select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from information_title 
		where id = #{id}
	</select>
	
	
	<!-- 通过ID更新 -->
	<update id="updateById" parameterType="com.galaxyinternet.model.hologram.InformationTitle">
		update information_title
		<set>
			<if test="parentId != null"> parent_id = #{parentId,jdbcType=VARCHAR}, </if>
			<if test="code != null"> code = #{code,jdbcType=VARCHAR}, </if>
			<if test="name != null"> name = #{name,jdbcType=VARCHAR}, </if>
			<if test="indexNo != null"> index_no = #{indexNo,jdbcType=DOUBLE}, </if>
			<if test="type != null"> type = #{type,jdbcType=INTEGER}, </if>
			<if test="sign != null"> sign = #{sign,jdbcType=INTEGER}, </if>
			<if test="content != null"> content = #{content,jdbcType=VARCHAR}, </if>
			<if test="isShow != null"> is_show = #{isShow,jdbcType=CHAR}, </if>
			<if test="isValid != null"> is_valid = #{isValid,jdbcType=INTEGER}, </if>
			<if test="placeholder != null"> placeholder = #{placeholder,jdbcType=VARCHAR}, </if>
			<if test="createdTime != null"> created_time = #{createdTime,jdbcType=BIGINT}, </if>
			<if test="createId != null"> create_id = #{createId,jdbcType=BIGINT}, </if>
			<if test="updatedTime != null"> updated_time = #{updatedTime,jdbcType=BIGINT}, </if>
			<if test="updateId != null"> update_id = #{updateId,jdbcType=BIGINT}, </if>

			<if test="danaoInfo != null"> danao_info = #{danaoInfo,jdbcType=VARCHAR}, </if>

		</set>
		where id = #{id}
	</update>
	
	
	<!-- 更新 -->
	<update id="updateByIdSelective" parameterType="com.galaxyinternet.model.hologram.InformationTitle">
		update information_title
		<set>
			<if test="parentId != null"> parent_id = #{parentId,jdbcType=VARCHAR}, </if>
			<if test="name != null"> name = #{name,jdbcType=VARCHAR}, </if>
			<if test="indexNo != null"> index_no = #{indexNo,jdbcType=DOUBLE}, </if>
			<if test="type != null"> type = #{type,jdbcType=INTEGER}, </if>
			<if test="sign != null"> sign = #{sign,jdbcType=INTEGER}, </if>
			<if test="content != null"> content = #{content,jdbcType=VARCHAR}, </if>
			<if test="isShow != null"> is_show = #{isShow,jdbcType=CHAR}, </if>
			<if test="isValid != null"> is_valid = #{isValid,jdbcType=INTEGER}, </if>
			<if test="placeholder != null"> placeholder = #{placeholder,jdbcType=VARCHAR}, </if>
		</set>
		<where>
			<trim prefixOverrides="and">
				<if test="id != null"> and id = #{id,jdbcType=BIGINT} </if>
				<if test="parentId != null"> and  parent_id = #{parentId,jdbcType=VARCHAR} </if>
				<if test="code != null"> and  code = #{code,jdbcType=VARCHAR} </if>
			</trim>
		</where>
	</update>
	
	
	
	
	<!-- 删除 -->
	<delete id="delete" parameterType="java.util.Map">
		delete from information_title
		<include refid="Base_Where_Clause" />
	</delete>
	
	
	
	<!-- 根据ID删除 -->
	<delete id="deleteById" parameterType="java.lang.Long">
		delete from information_title
		where id = #{id}
	</delete>


	<!-- id, parent_id, code, name, index_no, type, sign, content,is_show, is_valid, placeholder -->
	<select id="selectChildsByPid" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		id, parent_id, code, name,  type, sign, content,is_show, placeholder,is_must,val_rule,val_rule_mark,val_rule_formula,danao_info
		from information_title 
		<where>
			<trim prefixOverrides="and">
				<if test="id != null"> and id = #{id,jdbcType=BIGINT} </if>
				<if test="parentId != null"> and  parent_id = #{parentId,jdbcType=VARCHAR} </if>
				<if test="code != null"> and  code = #{code,jdbcType=VARCHAR} </if>
				<if test="name != null"> and  name = #{name,jdbcType=VARCHAR} </if>
				<if test="indexNo != null"> and  index_no = #{indexNo,jdbcType=INTEGER} </if>
				<if test="type != null"> and  type = #{type,jdbcType=INTEGER} </if>
				<if test="sign != null"> and  sign = #{sign,jdbcType=INTEGER} </if>
				<if test="isValid != null"> and  is_valid = #{isValid,jdbcType=INTEGER} </if>
				<if test="isShow != null"> and  is_show = #{isShow,jdbcType=CHAR} </if>
				<if test="createId != null"> and  create_id = #{createId,jdbcType=BIGINT} </if>
				<if test="updateId != null"> and  update_id = #{updateId,jdbcType=BIGINT} </if>
			</trim>
			
			<if test="sorting != null">order by ${sorting}</if>
		</where>
	</select>
	<resultMap id="RelateMap" type="com.galaxyinternet.model.hologram.InformationTitle">
		<id column="pk" 				jdbcType="VARCHAR" 		property="pk" />
		<result column="parent_id"  	jdbcType="BIGINT" 		property="parentId" />
		<result column="code" 			jdbcType="VARCHAR" 		property="code" />
		<result column="name" 			jdbcType="VARCHAR" 		property="name" />
		<result column="type" 			jdbcType="INTEGER" 		property="type" />
		<result column="sign" 			jdbcType="INTEGER" 		property="sign" />
		<result column="content" 		jdbcType="VARCHAR" 		property="content" />
		<result column="is_show" 		jdbcType="CHAR" 		property="isShow" />
		<result column="placeholder"  	jdbcType="VARCHAR" 		property="placeholder" />
		<result column="is_must" 		jdbcType="INTEGER" 		property="isMust" />
		<result column="val_rule" 	    jdbcType="VARCHAR" 		property="valRule" />
		<result column="val_rule_mark" 	jdbcType="VARCHAR" 		property="valRuleMark" />

		<result column="danao_info" 		jdbcType="VARCHAR" 		property="danaoInfo" />

		<result column="relate_id"  	jdbcType="BIGINT" 		property="relateId" />
		<result column="sub_id" 		jdbcType="VARCHAR" 		property="subId" />
	</resultMap>
	<select id="selectRelateTitle" resultMap="RelateMap" parameterType="java.util.Map">
		SELECT
		t.id, r.parent_id, r.code, CASE WHEN r.name IS NOT NULL THEN r.name ELSE t.name END AS name,  
		t.type, t.sign, t.content,
		t.is_show, t.placeholder,t.is_must,
		t.val_rule,t.val_rule_mark,t.danao_info,
		r.id AS relate_id,
		g.sub_id 
		FROM information_title t
		INNER JOIN information_title_relate r ON r.title_id = t.id
		LEFT JOIN information_grade g ON r.id = g.title_relate_id
		<where>
			<trim prefixOverrides="and">
				<if test="id != null"> and r.id = #{id,jdbcType=BIGINT} </if>
				<if test="parentId != null"> and  r.parent_id = #{parentId,jdbcType=VARCHAR} </if>
				<if test="code != null"> and  r.code like CONCAT( #{code,jdbcType=VARCHAR},'%') </if>
				<if test="isValid != null"> and  r.is_valid = #{isValid,jdbcType=INTEGER} </if>
				<if test="reportType != null"> and  r.report_type = #{reportType,jdbcType=VARCHAR} </if>
			</trim>
		</where>
		<if test="sorting != null">order by ${sorting}</if>		
	</select>
	


	<select id="selectFirstTitle" resultMap="BaseResultMap">
		select
			id, parent_id, code, name, index_no, type, sign, is_valid
		from information_title 
		where
			parent_id is null
			and is_show = 't'
			and type is NULL
		<!-- order by index_no -->
	</select>



	<resultMap id="Title_ResultMap" type="com.galaxyinternet.model.hologram.InformationTitle">

		<id column="id" 			jdbcType="BIGINT" 		property="id" />
		<result column="title_id" 	jdbcType="BIGINT" 		property="titleId" />
		<result column="code" 		jdbcType="VARCHAR" 		property="code" />
		<result column="name" 		jdbcType="VARCHAR" 		property="name" />
		<result column="type" 		jdbcType="INTEGER" 		property="type" />
		<result column="sign" 		jdbcType="INTEGER" 		property="sign" />
		<result column="content" 	jdbcType="VARCHAR" 		property="content" />

		<collection property="resultList" ofType="com.galaxyinternet.model.hologram.InformationResult">
			<id column="result_id" 				jdbcType="BIGINT" 		property="id" />
			<result column="project_id" 		jdbcType="BIGINT" 		property="projectId" />
			<result column="title_id" 			jdbcType="BIGINT" 		property="titleId" />
			<result column="content_choose" 	jdbcType="VARCHAR" 		property="contentChoose" />
			<result column="content_describe1" 	jdbcType="VARCHAR" 		property="contentDescribe1" />
			<result column="content_describe2" 	jdbcType="VARCHAR" 		property="contentDescribe2" />
		</collection>

	</resultMap>


	<select id="selectTitleOfResults" resultMap="Title_ResultMap" parameterType="java.util.Map">
		select
			title.id, title.code, title.name,title.type, title.sign, title.content,
			result.id result_id, result.project_id, result.title_id, result.content_choose, result.content_describe1, result.content_describe2
		FROM
			information_title title
		LEFT JOIN information_result result ON title.id = result.title_id
		<where>
		<trim prefixOverrides="and">
			<if test="titleId != null"> and title.id = #{titleId,jdbcType=BIGINT} </if>
			<if test="titleIds != null">
				and title.id in
				<foreach collection="titleIds" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="codes != null">
				and title.code in
				<foreach collection="codes" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>

			<if test="projectId != null"> and result.project_id = #{projectId,jdbcType=BIGINT} </if>
			and result.is_valid = 0
			<if test="notAllNUll != null"> and (result.content_choose is not null OR result.content_describe1 is not null OR result.content_describe2 is not null) </if>
		</trim>
		</where>
	</select>
	<select id="selectTitleOfResultsForRelate" resultMap="Title_ResultMap" parameterType="java.util.Map">
		select
			relate.id, relate.code,  (CASE WHEN relate.name IS NULL THEN title.name ELSE  relate.name  END) NAME,
			title.id title_id, title.type, title.content, title.placeholder,
			result.id result_id, result.project_id, result.title_id, result.content_choose, result.content_describe1, result.content_describe2
		FROM
			information_title_relate relate,information_title title,information_result result
		<where>
			relate.title_id = title.id
			AND title.id = result.title_id

			<if test="relateIds != null">
				and relate.id in
				<foreach collection="relateIds" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>

			<if test="projectId != null"> and result.project_id = #{projectId,jdbcType=BIGINT} </if>
			and result.is_valid = 0
			<if test="notAllNUll != null"> and (result.content_choose is not null OR result.content_describe1 is not null OR result.content_describe2 is not null) </if>
		</where>
	</select>

	<select id="selectResultsAndGradeForType22" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT
		grade.grade1, grade.grade_percentage,listdata.*
		FROM information_result result
		LEFT JOIN information_listdata listdata  ON result.content_choose = listdata.id
		LEFT JOIN information_result_grade grade ON result.id = grade.result_id
		WHERE
			result.id IN
			<foreach collection="resultIds" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
	</select>



<resultMap id="Title_fileResultMap" type="com.galaxyinternet.model.hologram.InformationTitle">

    <id column="id" 			jdbcType="BIGINT" 		property="id" />
    <result column="code" 		jdbcType="VARCHAR" 		property="code" />
    <result column="name" 		jdbcType="VARCHAR" 		property="name" />
    <result column="type" 		jdbcType="INTEGER" 		property="type" />
    <result column="sign" 		jdbcType="INTEGER" 		property="sign" />
    <result column="content" 	jdbcType="VARCHAR" 		property="content" />

    <collection property="fileList" ofType="com.galaxyinternet.model.hologram.InformationFile">
        <id column="file_id" jdbcType="BIGINT" property="id" />
        <result column="project_id" jdbcType="BIGINT" property="projectId" />
        <result column="title_id" jdbcType="BIGINT" property="titleId" />
        <result column="file_type" jdbcType="VARCHAR" property="fileType" />
        <result column="file_length" jdbcType="VARCHAR" property="fileLength" />
        <result column="file_key" jdbcType="VARCHAR" property="fileKey" />
        <result column="file_name" jdbcType="VARCHAR" property="fileName" />
        <result column="file_suffix" jdbcType="VARCHAR" property="fileSuffix" />
        <result column="bucket_name" jdbcType="VARCHAR" property="bucketName" />
        <result column="new_file_name" jdbcType="VARCHAR" property="newFileName" />
        <result column="file_url" jdbcType="VARCHAR" property="fileUrl" />
        <result column="wide" jdbcType="VARCHAR" property="wide" />
        <result column="high" jdbcType="VARCHAR" property="high" />
    </collection>

</resultMap>


<select id="selectTitleOfFileResults" resultMap="Title_fileResultMap" parameterType="java.util.Map">
    select
    title.id, title.code, title.name,title.type, title.sign, title.content,
    result.id file_id, result.project_id, result.title_id, result.file_type, result.file_length, result.file_key,
    result.file_name, result.file_suffix, result.bucket_name,result.new_file_name, result.wide, result.high
    FROM
    information_title title
    LEFT JOIN information_file result ON title.id = result.title_id
    <where>
        <trim prefixOverrides="and">
            <if test="titleId != null"> and title.id = #{titleId,jdbcType=BIGINT} </if>
            <if test="titleIds != null">
                and title.id in
                <foreach collection="titleIds" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

            <if test="projectId != null"> and result.project_id = #{projectId,jdbcType=BIGINT} </if>
            <if test="notAllNUll != null"> and (result.file_key is not null ) </if>
        </trim>
    </where>
    <if test="property != null">order by ${property}</if>
</select>
<!--
<select id="selectCountForTitleOfResults" resultType="java.lang.Integer" parameterType="java.util.Map">
    select
        count(allresult.id)
    FROM
    (
    select
        title.id
    FROM
        information_title title
    LEFT JOIN information_result result
        ON title.id = result.title_id
    <where>
        <trim prefixOverrides="and">
            <if test="titleId != null"> and title.id = #{titleId,jdbcType=BIGINT} </if>
            <if test="titleIds != null">
                and title.id in
                <foreach collection="titleIds" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

            and result.is_valid = 0
            <if test="projectId != null"> and result.project_id = #{projectId,jdbcType=BIGINT} </if>
            <if test="notAllNUll != null"> and (result.content_choose is not null OR result.content_describe1 is not null OR result.content_describe2 is not null) </if>
        </trim>
    </where>
    GROUP BY title.id
    ) allresult
</select>-->
	<!--
	<select id="selectCountForTitleOfListdata" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
			count(allresult.id)
		FROM
		(
		select
			title.id
		FROM
			information_title title
		LEFT JOIN information_listdata result
			ON title.id = result.title_id
		<where>
			<trim prefixOverrides="and">
				<if test="titleId != null"> and title.id = #{titleId,jdbcType=BIGINT} </if>
				<if test="titleIds != null">
					and title.id in
					<foreach collection="titleIds" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>

				and result.is_valid = 0
				<if test="projectId != null"> and result.project_id = #{projectId,jdbcType=BIGINT} </if>
				<if test="notAllNUll != null"> and (result.field_1 is not null OR result.field_2 is not null OR result.field_3 is not null) </if>
			</trim>
		</where>
		GROUP BY title.id
		) allresult
	</select>-->

	<!--<select id="selectCountForTitleOfFixedTable" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
			count(allresult.id)
		FROM
		(
		select
			title.id
		FROM
			information_title title
		LEFT JOIN information_fixed_table result
			ON title.id = result.title_id
		<where>
			<trim prefixOverrides="and">
				<if test="titleId != null"> and title.id = #{titleId,jdbcType=BIGINT} </if>
				<if test="titleIds != null">
					and title.id in
					<foreach collection="titleIds" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>

				and result.is_valid = 0
				<if test="projectId != null"> and result.project_id = #{projectId,jdbcType=BIGINT} </if>
				<if test="notAllNUll != null"> and (result.content is not null) </if>
			</trim>
		</where>
		GROUP BY title.id
		) allresult
	</select>-->

	<!--<select id="selectCountForTitleOfFile" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
			count(allresult.id)
		FROM
		(
		select
			title.id
		FROM
			information_title title
		LEFT JOIN information_file result
			ON title.id = result.title_id
		<where>
			<trim prefixOverrides="and">
				<if test="titleId != null"> and title.id = #{titleId,jdbcType=BIGINT} </if>
				<if test="titleIds != null">
					and title.id in
					<foreach collection="titleIds" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>

				<if test="projectId != null"> and result.project_id = #{projectId,jdbcType=BIGINT} </if>
				<if test="notAllNUll != null"> and (result.file_key is not null OR result.file_name is not null) </if>
			</trim>
		</where>
		GROUP BY title.id
		) allresult
	</select>-->


	<select id="selectCountForTitleOfResults" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
		count(allresult.title_id)
		FROM
		(
		select
			title_id
		FROM
			information_result
		<where>
			<trim prefixOverrides="and">
				<if test="projectId != null"> and project_id = #{projectId,jdbcType=BIGINT} </if>

				<if test="titleId != null"> and title_id = #{titleId,jdbcType=BIGINT} </if>
				<if test="titleIds != null">
					and title_id in
					<foreach collection="titleIds" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>

				<if test="notAllNUll != null"> and (content_choose is not null OR content_describe1 is not null OR content_describe2 is not null) </if>
				<!-- and is_valid = 0 -->
			</trim>
		</where>
		GROUP BY title_id
		) allresult
	</select>

	<select id="selectCountForTitleOfListdata" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
		count(allresult.title_id)
		FROM
		(
		select
			result.title_id
		FROM
			information_listdata result
		<where>
			<trim prefixOverrides="and">
				<if test="projectId != null"> and result.project_id = #{projectId,jdbcType=BIGINT} </if>

				<if test="titleId != null"> and result.title_id = #{titleId,jdbcType=BIGINT} </if>
				<if test="titleIds != null">
					and result.title_id in
					<foreach collection="titleIds" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>

				<if test="notAllNUll != null"> and (result.field_1 is not null OR result.field_2 is not null OR result.field_3 is not null) </if>
				<!--and result.is_valid = 0 -->
			</trim>
		</where>
		GROUP BY result.title_id
		) allresult
	</select>

	<select id="selectCountForTitleOfFixedTable" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
		count(allresult.title_id)
		FROM
		(
		select
			result.title_id
		FROM
			information_fixed_table result
		<where>
			<trim prefixOverrides="and">
				<if test="projectId != null"> and result.project_id = #{projectId,jdbcType=BIGINT} </if>

				 <if test="titleId != null"> and result.title_id = #{titleId,jdbcType=BIGINT} </if>
				<if test="titleIds != null">
					and result.title_id in
					<foreach collection="titleIds" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>

				<if test="notAllNUll != null"> and (result.content is not null) </if>
				<!-- and result.is_valid = 0 -->
			</trim>
		</where>
		GROUP BY result.title_id
		) allresult
	</select>

	<select id="selectCountForTitleOfFile" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
		count(allresult.title_id)
		FROM
		(
		select
			result.title_id
		FROM
			information_file result
		<where>
			<trim prefixOverrides="and">
				<if test="projectId != null"> and result.project_id = #{projectId,jdbcType=BIGINT} </if>

				 <if test="titleId != null"> and result.title_id = #{titleId,jdbcType=BIGINT} </if>
				<if test="titleIds != null">
					and result.title_id in
					<foreach collection="titleIds" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>

				<if test="notAllNUll != null"> and (result.file_key is not null OR result.file_name is not null) </if>
			</trim>
		</where>
		GROUP BY result.title_id
		) allresult
	</select>


	<select id="selectCountForRelateOfGrade" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
			count(allresult.title_relate_id)
		FROM
		(
		select
			title_relate_id
		FROM
			information_result_grade
		<where>
			<trim prefixOverrides="and">
				<if test="projectId != null"> and project_id = #{projectId,jdbcType=BIGINT} </if>

				 <if test="titleRelateId != null"> and title_relate_id = #{titleRelateId,jdbcType=BIGINT} </if>
				<if test="titleRelateIds != null">
					and title_relate_id in
					<foreach collection="titleRelateIds" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>

				<!--<if test="notAllNUll != null"> and (grade1 is not null OR grade1 is not null) </if>-->
				<if test="notAllNUll != null"> and (grade1 is not null ) </if>
			</trim>
		</where>
		GROUP BY title_relate_id
		) allresult
	</select>
	<select id="selectCountForRelateOfGrade2" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
		count(allresult.title_relate_id)
		FROM
		(
		select
		title_relate_id
		FROM
		information_result_grade
		<where>
			<trim prefixOverrides="and">
				<if test="projectId != null"> and project_id = #{projectId,jdbcType=BIGINT} </if>

				<if test="titleRelateId != null"> and title_relate_id = #{titleRelateId,jdbcType=BIGINT} </if>
				<if test="titleRelateIds != null">
					and title_relate_id in
					<foreach collection="titleRelateIds" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>

				<!--<if test="notAllNUll != null"> and (grade1 is not null OR grade1 is not null) </if>-->
				<if test="notAllNUll != null"> and (grade2 is not null ) </if>
			</trim>
		</where>
		GROUP BY title_relate_id
		) allresult
	</select>




	<select id="selectCountForTitleOfResultsByRelate" resultType="java.lang.Integer" parameterType="java.util.Map">
		SELECT
			COUNT(allresult.id)
		FROM (
			SELECT
				relate.id
			FROM
				information_title_relate relate
			LEFT JOIN
				information_result result
			ON
				relate.title_id = result.title_id
			<where>
				<trim prefixOverrides="and">
					<if test="relateId != null"> and relate.id = #{titleId,jdbcType=BIGINT} </if>
					<if test="relateIds != null">
						and relate.id in
						<foreach collection="relateIds" item="item" open="(" separator="," close=")">
							#{item}
						</foreach>
					</if>

					<if test="projectId != null"> and result.project_id = #{projectId,jdbcType=BIGINT} </if>
					<if test="notAllNUll != null"> and (result.content_choose is not null OR result.content_describe1 is not null OR result.content_describe2 is not null) </if>
					<!-- and result.is_valid = 0 -->
				</trim>
			</where>
			GROUP BY relate.id
		) allresult
	</select>



</mapper>
	