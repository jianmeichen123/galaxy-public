<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.galaxyinternet.model.touhou.ProjectHealth">

  <resultMap id="BaseResultMap" type="com.galaxyinternet.model.touhou.ProjectHealth">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="health_state" jdbcType="TINYINT" property="healthState" />
    <result column="rematk" jdbcType="VARCHAR" property="rematk" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="created_uid" jdbcType="BIGINT" property="createdUid" />
    <result column="created_time" jdbcType="BIGINT" property="createdTime" />
    <result column="updated_uid" jdbcType="BIGINT" property="updatedUid" />
    <result column="updated_time" jdbcType="BIGINT" property="updatedTime" />
    <result column="health_good_num" property="healthGoodNum" jdbcType="INTEGER" />
    <result column="health_warn_num" property="healthWarnNum" jdbcType="INTEGER" />
    <result column="health_high_num" property="healthHighNum" jdbcType="INTEGER" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="project_departId" property="depId" jdbcType="VARCHAR" />
    
  
  </resultMap>
  
  <sql id="Base_Column_List">
    id, project_id, health_state, rematk, user_name, created_uid, created_time, updated_uid, updated_time
  </sql>
  
  <sql id="Base_Where_Clause">
		<where>
			<trim prefixOverrides="and">
			      <if test="id != null"> and id = #{id,jdbcType=BIGINT} </if>
			      <if test="projectId != null"> and project_id = #{projectId,jdbcType=BIGINT} </if>
			      <if test="healthState != null"> and health_state = #{healthState,jdbcType=TINYINT} </if>
			      <if test="rematk != null"> and rematk = #{rematk,jdbcType=VARCHAR} </if>
			      <if test="userName != null"> and user_name = #{userName,jdbcType=VARCHAR} </if>
			      <if test="createdUid != null"> and created_uid = #{createdUid,jdbcType=BIGINT} </if>
			      <if test="createdTime != null"> and created_time = #{createdTime,jdbcType=BIGINT} </if>
			      <if test="updatedUid != null"> and updated_uid = #{updatedUid,jdbcType=BIGINT} </if>
			      <if test="updatedTime != null"> and updated_time = #{updatedTime,jdbcType=BIGINT} </if>
			</trim>
		</where>
		<if test="sorting != null">order by ${sorting}</if>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</sql>
	
  
  
  <!-- 根据ID查询-->
	<select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sop_project_health
		where id = #{id,jdbcType=BIGINT}
	</select>
	
	<!-- 查询 -->
	<select id="select" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from sop_project_health 
		<include refid="Base_Where_Clause" />
	</select>
	
	<!-- 查询总数 -->
	<select id="selectCount" resultType="java.lang.Long" parameterType="java.util.Map">
		select count(id) from sop_project_health
		<include refid="Base_Where_Clause" />
	</select>
	
	<!-- 删除 -->
	<delete id="delete" parameterType="java.util.Map">
		delete from sop_project_health
		<include refid="Base_Where_Clause" />
	</delete>
	
	<!-- 根据ID删除 -->
	<delete id="deleteById" parameterType="java.lang.Long">
		delete from sop_project_health
		where id = #{id,jdbcType=BIGINT}
	</delete>
	
 	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.galaxyinternet.model.touhou.ProjectHealth">
 		 <![CDATA[
	 		insert into sop_project_health (id, project_id, health_state, 
		      rematk, user_name, created_uid, created_time, 
		      updated_uid, updated_time)
		    values (#{id,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{healthState,jdbcType=TINYINT}, 
		      #{rematk,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{createdUid,jdbcType=BIGINT}, #{createdTime,jdbcType=BIGINT}, 
		      #{updatedUid,jdbcType=BIGINT}, #{updatedTime,jdbcType=BIGINT})
 		 ]]>
 	</insert>
	
	
	<update id="updateById" parameterType="com.galaxyinternet.model.touhou.ProjectHealth">
		update sop_project_health
		<set>
	      <if test="projectId != null"> project_id = #{projectId,jdbcType=BIGINT} </if>
	      <if test="healthState != null"> health_state = #{healthState,jdbcType=TINYINT} </if>
	      <if test="rematk != null"> rematk = #{rematk,jdbcType=VARCHAR} </if>
	      <if test="userName != null"> user_name = #{userName,jdbcType=VARCHAR} </if>
	      <if test="createdUid != null"> created_uid = #{createdUid,jdbcType=BIGINT} </if>
	      <if test="createdTime != null"> created_time = #{createdTime,jdbcType=BIGINT} </if>
	      <if test="updatedUid != null"> updated_uid = #{updatedUid,jdbcType=BIGINT} </if>
	      <if test="updatedTime != null"> updated_time = #{updatedTime,jdbcType=BIGINT} </if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	<select id="getHealthyCharts" resultMap="BaseResultMap" parameterType="java.util.Map">
		SELECT  
		    sh.`health_state`,
			SUM(CASE WHEN sh.`health_state`='1' THEN 1 ELSE 0 END) AS health_high_num,
			SUM(CASE WHEN sh.`health_state`='2' THEN 1 ELSE 0 END) AS health_good_num,
			SUM(CASE WHEN sh.`health_state`='3' THEN 1 ELSE 0 END) AS health_warn_num
			FROM(
			SELECT a.`health_state`,a.`id`,a.`project_id`
			 FROM `sop_project_health` a INNER JOIN sop_project s ON a.`project_id`=s.`id`
			 WHERE 
			 NOT EXISTS(
			 SELECT 1 FROM `sop_project_health` b
			WHERE a.`project_id`=b.`project_id` AND b.`created_time`>a.`created_time`)
			 AND s.project_status!='projectStatus:2'
			  <if test="depId!= null">
			    and s.`project_departId`=#{depId}
			 </if> 
			  GROUP BY a.`project_id`) 
			sh  GROUP BY sh.health_state
	</select>
  <select id="getHealthyChartsGrid" resultMap="BaseResultMap" parameterType="java.util.Map">
            SELECT a.`health_state`,a.`id`,a.`project_id`,s.`project_name` project_name,a.`rematk`,a.`user_name`,a.`created_time`,s.project_departId depId
			 FROM `sop_project_health` a INNER JOIN sop_project s ON a.`project_id`=s.`id`
			 WHERE 
			 NOT EXISTS(
			 SELECT 1 FROM `sop_project_health` b
			WHERE a.`project_id`=b.`project_id` AND b.`created_time`>a.`created_time`)
			 AND s.project_status!='projectStatus:2' 
			  <if test="healthState!= null">
			  AND a.`health_state`=#{healthState}
			 </if>
			   <if test="depId!= null">
			  AND s.`project_departId`=#{depId}
			 </if>
			 GROUP BY a.`project_id`
			 
			<if test="sorting != null"> order by ${sorting}</if>
			limit #{offset}, #{limit}
		
		</select>
			<!-- 查询总数 -->
	<select id="selectCountChart" resultType="java.lang.Long" parameterType="java.util.Map">
		 SELECT count(a.id)
			 FROM `sop_project_health` a INNER JOIN sop_project s ON a.`project_id`=s.`id`
			 WHERE 
			 NOT EXISTS(
			 SELECT 1 FROM `sop_project_health` b
			WHERE a.`project_id`=b.`project_id` AND b.`created_time`>a.`created_time`)
			 AND s.project_status!='projectStatus:2' 
			  <if test="healthState!= null">
			  AND a.`health_state`=#{healthState}
			 </if>
	</select>
  
</mapper>