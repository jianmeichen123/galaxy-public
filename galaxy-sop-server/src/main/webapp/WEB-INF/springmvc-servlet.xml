<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-4.0.xsd">

	<!-- 依赖的服务属性配置器 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:db/database.properties</value>
				<value>classpath:dubbo/dubbo.properties</value>
				<!-- <value>classpath:redis/redis.properties</value> -->
			</list>
		</property>
	</bean>

	<!-- Configures the @Controller programming model -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="gsonHttpMessageConverter" />
				<ref bean="stringHttpMessageConverter" />
				<ref bean="byteArrayMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- 定义扫描Controller的base-package -->
	<context:component-scan base-package="com.galaxyinternet.*"></context:component-scan>
	<!-- springmvc的关键配置 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<ref bean="gsonHttpMessageConverter" />
			<ref bean="stringHttpMessageConverter" />
			<ref bean="byteArrayMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 这个default-servlet-handler 可以使用DispatcherServlet的url-pattern 是/*, 如果springmvc找不到handler来处理请求, 
		会自动放过,让serlvet container处理 -->
	<mvc:default-servlet-handler />
	<!-- 这个tag是方便匹配请求跟view, 这个view一般是静态的 -->
	<mvc:view-controller path="/about" view-name="about" />
	<!-- 这个tag是方便重定向路径 -->
	<mvc:resources mapping="/media/**" location="/media/" />
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<!-- 线上: 最大上传文件限制为25M -->
			<!-- <value>26214400</value> -->
			<!--测试： 最大上传文件限制为50M -->
			<value>52428800</value>
		</property>
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean
				class="com.galaxyinternet.framework.core.form.TokenHandlerInterceptor" />
		</mvc:interceptor>
		<!-- 用于处理产生消息提醒&sop操作日志的拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean
				class="com.galaxyinternet.common.annotation.MessageHandlerInterceptor" />
		</mvc:interceptor>

	</mvc:interceptors>
	<bean id="gsonHttpMessageConverter"
		class="org.springframework.http.converter.json.GsonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<constructor-arg value="UTF-8" />
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
				<value>text/javascript;charset=UTF-8</value>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
		<property name="writeAcceptCharset" value="false" />
	</bean>
	<bean id="byteArrayMessageConverter"
		class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 全局异常配置 start -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">errors/500</prop>
				<prop key="java.lang.Throwable">errors/404</prop>
				<prop key="java.lang.RuntimeException">errors/500</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="errors/500">500</prop>
				<prop key="errors/404">404</prop>
			</props>
		</property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="springExceptionResolver" />
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<property name="defaultErrorView" value="errors/500" />
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500" />
	</bean>
	<!-- 全局异常配置 end -->
	
</beans>
